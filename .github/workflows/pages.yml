# Workflow para construir y desplegar un sitio Hugo a Cloudflare Pages
name: Blowfish Docs Deploy

on:
  # Se ejecuta al hacer push a la rama main
  push:
    branches: ["main"]
  # Permite ejecutar manualmente este workflow desde la pestaña Actions
  workflow_dispatch:

# Se definen los permisos necesarios
permissions:
  contents: read
  deployments: write

# Permite una concurrencia de despliegues para evitar solapamientos
concurrency:
  group: "pages"
  cancel-in-progress: true

# Configura el uso por defecto de bash
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Hugo setup
        uses: peaceiris/actions-hugo@v2.6.0
        with:
          hugo-version: 0.140.2
          extended: true
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          submodules: true  # Obtiene los submódulos (por ejemplo, temas de Hugo)
          fetch-depth: 0    # Obtiene todo el historial de Git

      - name: Build with Hugo
        env:
          # Variables para la producción
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          # Genera el sitio en la carpeta ./public
          hugo --minify -d ./public --baseURL https://blog.pgscom.es/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: hugo-build
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: hugo-build
          path: ./public

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3.10.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Despliega la carpeta generada; reemplaza "your_project_name" con el nombre real de tu proyecto en Cloudflare Pages
          command: pages deploy ./public --project-name=blog
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
